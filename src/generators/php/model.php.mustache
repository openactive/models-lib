<?php

namespace OpenActive\Models{{{subNamespaceText}}};

/**
{{#classDoc}}
 * {{{ . }}}
{{/classDoc}}
 *
 */
class {{{className}}} extends {{{ inherits }}}
{
    /**
     * @return string[]|null
     */
    public static function getType()
    {
        return "{{modelType}}";
    }

    public static function fieldList() {
        $fields = [
{{#fieldList}}
            "{{{ propName }}}" => "{{{memberName}}}",
{{/fieldList}}
        ];

        return array_merge(parent::fieldList(), $fields);
    }

{{#fieldList}}
    /**
{{#description}}
     * {{{ . }}}
{{/description}}
     *
{{# codeExample }}
     * {{{ . }}}
{{/codeExample }}
     *
     * @var {{{propertyType}}}
{{#if isDisinherited}}
     * @deprecated This property is disinherited in this type, and must not be used.
{{/if}}
{{#if deprecationGuidance}}
     * @deprecated {{{deprecationGuidance}}}
{{/if}}
     */
    protected ${{{propName}}};

{{/fieldList}}
{{#fieldList}}
    /**
     * @return {{{propertyType}}}
{{#if isDisinherited}}
     * @deprecated This property is disinherited in this type, and must not be used.
{{/if}}
{{#if deprecationGuidance}}
     * @deprecated {{{deprecationGuidance}}}
{{/if}}
     */
    public function get{{{pascalCasePropName}}}()
    {
        return $this->{{{propName}}};
    }

    /**
     * @param {{{propertyType}}} ${{{propName}}}
     * @return void
     * @throws \OpenActive\Exceptions\InvalidArgumentException If the provided argument is not of a supported type.
{{#if isDisinherited}}
     * @deprecated This property is disinherited in this type, and must not be used.
{{/if}}
{{#if deprecationGuidance}}
     * @deprecated {{{deprecationGuidance}}}
{{/if}}
     */
    public function set{{{pascalCasePropName}}}(${{{propName}}})
    {
        $types = [
{{# propertyTypes }}
            "{{{ . }}}",
{{/propertyTypes }}
        ];

        ${{{propName}}} = self::checkTypes(${{{propName}}}, $types);

        $this->{{{propName}}} = ${{{propName}}};
    }

{{/fieldList}}
}
